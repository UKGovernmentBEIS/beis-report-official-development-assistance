language: minimal
services:
- docker
cache:
  directories:
  - docker_images
before_install:
- docker load -i docker_images/images.tar || true
before_cache:
- docker save -o docker_images/images.tar $(docker images -a -q)
jobs:
  include:
  - stage: Build
    script: |
      TAG="${TRAVIS_BUILD_NUMBER}-${TRAVIS_COMMIT}"
      docker build \
        --target test \
        --build-arg RAILS_ENV=test \
        --cache-from "thedxw/beis-report-official-development-assistance:$TAG" \
        --tag "thedxw/beis-report-official-development-assistance:test" .
  - stage: Test the application
    name: Use Docker and Docker Compose to perform automated application tests
    script: |
      docker-compose -f docker-compose.ci.yml up --detach
      docker exec test-container /bin/bash -c "bundle exec rake"
      docker exec test-container /bin/bash -c "bundle exec brakeman"
  - stage: Lint our shell scripts
    name: Linting our shell scripts
    script: |
      bash -c 'shopt -s globstar nullglob; shellcheck **/*.{sh,ksh,bash}'
  - stage: Test terraform
    name: Test the terraform
    script: |
      cd terraform
      git clone https://github.com/tfutils/tfenv.git ~/.tfenv
      export PATH="$HOME/.tfenv/bin:$PATH"
      tfenv install
      ../install-terraform-provider-for-cf.sh
      terraform init
      terraform fmt  -diff -check -recursive
      terraform validate
      cd ..
      set +eu
deploy:
- provider: script
  script: bash travis-docker-push.sh
  on:
    all_branches: true
    condition: "$TRAVIS_BRANCH =~ ^(develop|master|hotfix)"
- provider: script
  script: bash deploy-terraform.sh
  on:
    all_branches: true
    condition: "$TRAVIS_BRANCH =~ ^(develop|master)$"
env:
  global:
    secure: mBNvcyOEhYVAbbUJL4sXvwU6RM9LgFLAaEq/B5VKhUSOSKWvcYYInk5qWOldMF79aE8mC7JsOi5D4AC6fvPEEU2aM9N5jcvoNyR5FEKg80ltgK8GE8NwrzqjD3shS2IhFtKdBN1PI/vDxAtIJqefQ8eSy2/FwdpN/aB06QDGjEy5ye2dh/A4YH5fAz1W9lncFI8zr7ZdPC5N7FG6DkNCVju9wfqwzyHCQabuJ3iKvq3dxBaRvJgrIi6I2QVHV9ieWARuI5CHgYQWwm2VPVW5vUhrZ3ZaefD5qJZ4Bp+NzlnDH7frCjuDpPrCiNI6wYrbOxj4LFVDAWl9dMYcZ9BY6DNQjeTtSt9qLCgG6csBsTf9RHR5THz3zreChEyf/+iJvBqyh9XdSNj/ZtEDFAM4z4LTsyQy7VlxyjLoO+oYOONzQP/y4EOmELJ7YPvB6bZmazJ2Rpix91svlBmaxtcx63W0aZa8yqqzJ5n6mPdIIBnMQOlNkofUSapaKJRceMcVqHk/5EqjUG7ETTf8eohrfLqrHP/S344NPNCDMHmTIoWd4QL7K9E0IeAinBUOa8RfN4A3SfXvouOPvfZGqCjmciAsQi2r024EqZ/c39xu1BQDLIm+LZ9ThMBimi2u7yZV7W4ijoY7DRae3mgzqGxnHxEmWhtDMWWnEujfR2BM4oY= # Coveralls.io READ_TOKEN
notifications:
  slack:
    if: branch =~ /(develop|master)/
    on_failure: change
    secure: CUMfiPR1L6YiIfu0stmmTVWb1OjIZakrSI7gLfoK9UXZK/kGY1jk6HDVmpK4tsZ3S6Za3iZitAfsPuy3O4R/D4F6gNPbrTsWQ0oYz8z8WPEWSjGTaU0S4Mr5BjKYm8nWtF9bHiTVXVfXtrcg72/PHQyneVB4wAh5sxcEBq/JaGaITGgqs39MIOHo23iLzz4piMvIpho8LAMyBSAR6mji0GYU5gFIBkeY3ysSn+lU5R71og6vKdln2Hf0jLQBonk+Q5numDTBOKaVj4uV8o5tNcrfr4pLQud6mIrKRyQudUrJFbj8e4iBMhmZSY5hM6JKzKDYfo9X8ymLqq75hsg0vwXlcP6dn+5LHnvjqfPLx+/d/pbeGU8OBHMj2IkxYWxpv7W2j2YmUhLkmxGjO+QcHPg/dbtIEFtmC48aiy4GRSGoeQssPLgr6DT1zcWyrXv7cdp+I0Fp0WWxk0HhnutSeScc3waoLfms0eB0VbwKzd+19gj1R86xOowH9K+Qaevpj8pnaSH53xyOjicGBlWmwZa/onrsIsJNUynv1RrhA+15VevQ8DFxiUXmy6hTQ0vDdlAd86G7cqkPwvz2bCHmuCH04CKjtBm7XSCixWiHs0s65/UyFMhaVV90N8ZTbmer/jyby9vefp/yeo6NB1I2zpVfyqLIZGbFqHMvH+maHyc=
