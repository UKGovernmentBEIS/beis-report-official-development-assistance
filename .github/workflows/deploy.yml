name: Deploy

on:
  push:
    branches:
      - main
      - develop

env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  CF_USER: ${{ secrets.CF_USER }}
  CF_PASSWORD: ${{ secrets.CF_PASSWORD }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  build_and_push_to_dockerhub:
    runs-on: ubuntu-latest
    outputs:
      docker_tag: ${{ steps.set_output.outputs.docker_tag }}
    steps:
      - uses: actions/checkout@v4
      - name: Set Docker tag environment variable
        run: echo "DOCKER_TAG=${GITHUB_RUN_ID}-${GITHUB_SHA}" >> $GITHUB_ENV
      - name: Tag and Push Docker Container
        run: script/docker-push
      - name: Set Docker tag as an output
        id: set_output
        run: echo "docker_tag=${{ env.DOCKER_TAG }}" >> $GITHUB_OUTPUT
  deploy_to_production:
    needs: build_and_push_to_dockerhub
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    env:
      TF_VAR_docker_image: ${{ needs.build_and_push_to_dockerhub.outputs.docker_tag }}
      TF_VAR_docker_username: ${{ secrets.DOCKER_USERNAME }}
      TF_VAR_docker_password: ${{ secrets.DOCKER_PASSWORD }}
      TF_VAR_environment: "prod"
      TF_VAR_secret_key_base: ${{ secrets.PROD_SECRET_KEY_BASE }}
      TF_VAR_notify_key: ${{ secrets.PROD_NOTIFY_KEY }}
      TF_VAR_notify_welcome_email_template: ${{ secrets.PROD_NOTIFY_WELCOME_EMAIL_TEMPLATE }}
      TF_VAR_notify_view_template: "b541df04-add8-458e-a7d3-2e156386e150"
      TF_VAR_notify_otp_verification_template: "1a832f2e-b13b-47f0-b32a-9cd6672364d2"
      TF_VAR_rollbar_access_token: ${{ secrets.ROLLBAR_ACCESS_TOKEN }}
      TF_VAR_additional_hostnames: ${{ secrets.PROD_ADDITIONAL_HOSTNAMES }}
      TF_VAR_papertrail_destination: ${{ secrets.PROD_PAPERTRAIL_DESTINATION }}
      TF_VAR_google_tag_manager_container_id: ${{ secrets.PROD_GOOGLE_TAG_MANAGER_CONTAINER_ID }}
      TF_VAR_google_tag_manager_environment_auth: ${{ secrets.PROD_GOOGLE_TAG_MANAGER_ENVIRONMENT_AUTH }}
      TF_VAR_google_tag_manager_environment_preview: ${{ secrets.PROD_GOOGLE_TAG_MANAGER_ENVIRONMENT_PREVIEW }}
      TF_VAR_custom_domain: ${{ secrets.PROD_CUSTOM_DOMAIN }}
      TF_VAR_custom_hostname: ${{ secrets.PROD_CUSTOM_HOSTNAME }}
      TF_VAR_robot_noindex: "false"
    steps:
      - uses: actions/checkout@v4
      - name: Deploy latest code to Production
        run: script/deploy-terraform
  deploy_to_staging:
    needs: build_and_push_to_dockerhub
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    env:
      TF_VAR_docker_image: ${{ needs.build_and_push_to_dockerhub.outputs.docker_tag }}
      TF_VAR_docker_username: ${{ secrets.DOCKER_USERNAME }}
      TF_VAR_docker_password: ${{ secrets.DOCKER_PASSWORD }}
      TF_VAR_environment: "staging"
      TF_VAR_secret_key_base: ${{ secrets.STAGING_SECRET_KEY_BASE }}
      TF_VAR_notify_key: ${{ secrets.STAGING_NOTIFY_KEY }}
      TF_VAR_notify_welcome_email_template: ${{ secrets.STAGING_NOTIFY_WELCOME_EMAIL_TEMPLATE }}
      TF_VAR_notify_view_template: "b541df04-add8-458e-a7d3-2e156386e150"
      TF_VAR_notify_otp_verification_template: "1a832f2e-b13b-47f0-b32a-9cd6672364d2"
      TF_VAR_rollbar_access_token: ${{ secrets.ROLLBAR_ACCESS_TOKEN }}
      TF_VAR_additional_hostnames: ${{ secrets.STAGING_ADDITIONAL_HOSTNAMES }}
      TF_VAR_papertrail_destination: ${{ secrets.STAGING_PAPERTRAIL_DESTINATION }}
      TF_VAR_google_tag_manager_container_id: ${{ secrets.STAGING_GOOGLE_TAG_MANAGER_CONTAINER_ID }}
      TF_VAR_google_tag_manager_environment_auth: ${{ secrets.STAGING_GOOGLE_TAG_MANAGER_ENVIRONMENT_AUTH }}
      TF_VAR_google_tag_manager_environment_preview: ${{ secrets.STAGING_GOOGLE_TAG_MANAGER_ENVIRONMENT_PREVIEW }}
      TF_VAR_custom_domain: ${{ secrets.STAGING_CUSTOM_DOMAIN }}
      TF_VAR_custom_hostname: ${{ secrets.STAGING_CUSTOM_HOSTNAME }}
      TF_VAR_robot_noindex: "true"
    steps:
      - uses: actions/checkout@v4
      - name: Deploy latest code to Staging
        run: script/deploy-terraform
  deploy_to_training:
    needs: build_and_push_to_dockerhub
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    env:
      TF_VAR_docker_image: ${{ needs.build_and_push_to_dockerhub.outputs.docker_tag }}
      TF_VAR_docker_username: ${{ secrets.DOCKER_USERNAME }}
      TF_VAR_docker_password: ${{ secrets.DOCKER_PASSWORD }}
      TF_VAR_environment: "pentest"
      TF_VAR_secret_key_base: ${{ secrets.TRAINING_SECRET_KEY_BASE }}
      TF_VAR_notify_key: ${{ secrets.TRAINING_NOTIFY_KEY }}
      TF_VAR_notify_welcome_email_template: ${{ secrets.TRAINING_NOTIFY_WELCOME_EMAIL_TEMPLATE }}
      TF_VAR_notify_view_template: "b541df04-add8-458e-a7d3-2e156386e150"
      TF_VAR_notify_otp_verification_template: "1a832f2e-b13b-47f0-b32a-9cd6672364d2"
      TF_VAR_rollbar_access_token: ${{ secrets.ROLLBAR_ACCESS_TOKEN }}
      TF_VAR_additional_hostnames: ${{ secrets.TRAINING_ADDITIONAL_HOSTNAMES }}
      TF_VAR_papertrail_destination: ${{ secrets.TRAINING_PAPERTRAIL_DESTINATION }}
      TF_VAR_google_tag_manager_container_id: ${{ secrets.TRAINING_GOOGLE_TAG_MANAGER_CONTAINER_ID }}
      TF_VAR_google_tag_manager_environment_auth: ${{ secrets.TRAINING_GOOGLE_TAG_MANAGER_ENVIRONMENT_AUTH }}
      TF_VAR_google_tag_manager_environment_preview: ${{ secrets.TRAINING_GOOGLE_TAG_MANAGER_ENVIRONMENT_PREVIEW }}
      TF_VAR_custom_domain: ${{ secrets.TRAINING_CUSTOM_DOMAIN }}
      TF_VAR_custom_hostname: ${{ secrets.TRAINING_CUSTOM_HOSTNAME }}
      TF_VAR_robot_noindex: "true"
    steps:
      - uses: actions/checkout@v4
      - name: Deploy latest code to the Training environment
        run: script/deploy-terraform
  ghost_inspector_staging:
    needs: deploy_to_staging
    if: github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    steps:
      - name: execute Ghost Inspector test
        uses: docker://ghostinspector/cli
        with:
          args: suite execute ${{ secrets.STAGING_GI_SUITE }} \
            --apiKey ${{ secrets.GI_API_KEY }} \
            --errorOnFail
  ghost_inspector_prod:
    needs: deploy_to_production
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: execute Ghost Inspector test
        uses: docker://ghostinspector/cli
        with:
          args: suite execute ${{ secrets.PROD_GI_SUITE }} \
            --apiKey ${{ secrets.GI_API_KEY }} \
            --errorOnFail
  check_and_notify:
    needs: deploy_to_production
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4
      - name: Notifying the team of a successful deploy
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: script/deploy-notification
